name: Continuous Integration

on:
  pull_request:
    branches: [master, api-project-alpine-with-user]
    types: [opened, synchronize]
  push:
    branches: [master, api-project-alpine-with-user]

jobs:
  avoid_redundancy:
    name: avoid redundancy
    runs-on: ubuntu-20.04

    steps:
      - name: cancel workflow action
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  
  lint:
    needs: [avoid_redundancy]
    runs-on: ubuntu-20.04

    steps:
      - name: checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@v1
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          rubocop_version: gemfile
          rubocop_extensions: rubocop-rails:gemfile rubocop-rspec:gemfile rubocop-performance:gemfile
          github_token: ${{ github.token }}
          # Default is github-pr-check
          reporter: github-pr-review
          fail_on_error: true
          filter_mode: diff_context
          level: warning

  tests:
    needs: [avoid_redundancy]
    name: build project for rspec
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:14.2-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: install required apt packages
        run: |
          sudo apt-get -yqq install libpq-dev
      - name: checkout project
        uses: actions/checkout@v3
        with:
          # fetch all history for all tags and branches
          fetch-depth: 0
      - name: download ruby and run bundle
        uses: ruby/setup-ruby@v1
        with:
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true
      - name: setup database
        env:
          DATABASE_HOST: localhost
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          RAILS_ENV: test
        run: |
          bin/rails db:setup

      - name: run rspec
        env:
          DATABASE_HOST: localhost
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          RAILS_ENV: test
        run: |
          bundle exec rspec

  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [lint, tests]
    name: deploy to heroku
    runs-on: ubuntu-20.04

    steps:
      - name: check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_API_APP}}
          heroku_email: ${{secrets.HEROKU_API_EMAIL}}
          healthcheck: "https://${{secrets.HEROKU_API_APP}}.herokuapp.com/health_check"
          rollbackonhealthcheckfailed: true
